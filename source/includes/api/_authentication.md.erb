# API Authentication
If your application uess the Causemo API to perform actions on behalf of a Causemo user, you must use our OAuth flow and the user must authenticate with Causemo first. For example, if you are asking users to authenticate using their Causmeo authentication credentials or if you are using our API endpoints which require a valid Causemo user identifier to perform the action (ie: activating a edit campaign). 

If your application is not referencing Causemo users directly, then you can use our Basic authentication flow. For exmaple, if you want to show a campaign in your application or if you are posting a pledge to Causemo for an email address. Those actions which do not need a Causemo user to be logged in are able to run in the Basic flow, since it only requires that you have valid client keys.

All clients are given `public` and `private` keys. The public keys can be passed around on UIs. Public keys maybe visible to end-users and for this reason only certain endpoints are accessible with only `public` keys. On the otherhand, `private` keys must always remain private and should always remain on your servers; never transmitted or packaged into the front end applications, as users might see it. You should never reveal what your private key is, otherwise, end-users can access `private` endpoints on your behalf. If you feel that your keys have been compramised, please contact Causemo to reset your keys.

All API requests must be made over HTTPS. Calls made over plain HTTP will be redirected to HTTPS. API requests without authentication will fail.

## Clients
Applications accessing/using Causemo API are consided 'clients' since they are consuming the provided API. Each client has a public and private key. The private key should **always** remain private. If a key is compromised, Causemo is able to disable access to the API for that particular key and generate another for the compromised client. 

A client also has a provided `scope` which limits a client access to a particular area in the Causemo API. Scopes are:

* `app`: Clients are limited to App API
* `web`: Clients are limited to Web API

## Basic Flow
```shell
# Fetch your client info:
# Replace `PUBLIC_KEY` with your public key
curl -X GET -H "Content-Type: application/json" -H "api-version: 1" https://dev-api.causemo.com/web/clients/me -u <PUBLIC_KEY>:
```
Authentication to the API is performed via HTTP Basic Auth. For **public** endpoints, provide your **public** API key as the basic auth username value and no password. Remember to still include the trailing **:**, this will use empty password, otherwise you will be prompted for a password. 

For **private** endpoints, provide both your **public** API key as the basic auth username value **and** **private** key as the basic auth password. This API document will flag an endpoint as **public** or **private**. 

## Authentication Endpoints
Contains all endpoints related to the API clients.

### - Authenticate
```shell
# Replace `PUBLIC_KEY` with your public key
# Replace `PRIVATE_KEY` with your private key
# Replace `USER` with user email
# Replace `PASSWORD` with user password
curl -X POST -H "Content-Type: application/json" -H "api-version: 1" "https://dev-api.causemo.com/auth/token?grant_type=password&username=<USER>&password=<PASSWORD>" -u <PUBLIC_KEY>:<PRIVATE_KEY>
```
```javascript
// NOTE: your client must be "priveleged" to be able to authenticate a user
var AuthenticationAPI = require('causemo-api-client').authenticationAPI;
var requestIp = require('request-ip'); 
var ipAddress = requestIp.getClientIp(req); // get the user API address
return AuthenticationAPI.authenticate(email, password, ipAddress)
  .then(console.log.bind(undefined))
  .catch(console.error.bind(undefined));
```
Generates a token for the provided user. The Client must also be priveleged to call this endpoint, meaning, Causemo trust the client to authenticate users on their side.

* **URL:** `/auth/token`
* **METHOD:** POST
* **TYPE:** private
* **RETURN:** authentication token

#### QUERY:
Parameter | Required | Description
--------- | ------- | -----------
username | true | User email address
password | true | User password
grant_type | true | Value should be 'password'
invite | false | A user invitation token if user is accepting an invitation

#### HEADERS:
Parameter | Required | Description
--------- | ------- | -----------
x-causemo-client-ip | false | User IP address

### - Logout
```shell
# Replace `PUBLIC_KEY` with your public key
# Replace `AUTH_TOKEN` with the authentication token from the authenticate call
curl -X DELETE -H "Content-Type: application/json" -H "api-version: 1" "https://dev-api.causemo.com/auth/token/<AUTH_TOKEN>" -u <PUBLIC_KEY>: 
```
```javascript
var AuthenticationAPI = require('causemo-api-client').authenticationAPI;
return AuthenticationAPI.logout(authToken)
  .then(console.log.bind(undefined))
  .catch(console.error.bind(undefined));
```
Logs out the user via deleting the provided tokenId. The token is the same token provided in the the authentication call.

* **URL:** `/auth/token/:tokenId`
* **METHOD:** DELETE
* **TYPE:** public
* **RETURN:** empty

#### PATH:
Parameter | Required | Description
--------- | ------- | -----------
tokenId | true | The token provided in the the authentication call

### - Forgot Password
```shell
# Replace `PUBLIC_KEY` with your public key
# Replace `PRIVATE_KEY` with your private key
# Replace `EMAIL` with user email
curl -X POST -H "Content-Type: application/json" -H "api-version: 1" -d '{"email":"<EMAIL>"}' "https://dev-api.causemo.com/auth/forgot-password" -u <PUBLIC_KEY>:<PRIVATE_KEY>
```
```javascript
var AuthenticationAPI = require('causemo-api-client').authenticationAPI;
return AuthenticationAPI.forgotPassword(email)
  .then(console.log.bind(undefined))
  .catch(console.error.bind(undefined));
```
Creates a token for the user to be able reset their password and emails it to the user provided. **NOTE:** For security purposes, it does not return any identifiable information, nor if it successfully found the user with that email address.

* **URL:** `/auth/forgot-password`
* **METHOD:** POST
* **TYPE:** private
* **RETURN:** empty - token is sent via email

#### BODY:
Parameter | Required | Description
--------- | ------- | -----------
email | true | User email address

### - Reset Password
```shell
# Replace `PUBLIC_KEY` with your public key
# Replace `PRIVATE_KEY` with your private key
# Replace `TOKEN` with user token value
# Replace `PASSWORD` with new password value
curl -X POST -H "Content-Type: application/json" -H "api-version: 1" -d '{"password":"<PASSWORD>"}' "https://dev-api.causemo.com/auth/reset-password/<TOKEN>" -u <PUBLIC_KEY>:<PRIVATE_KEY>
```
```javascript
var AuthenticationAPI = require('causemo-api-client').authenticationAPI;
return AuthenticationAPI.resetPassword(token, password)
  .then(console.log.bind(undefined))
  .catch(console.error.bind(undefined));
```
Resets the user password associated with the provided token to the given password. The token is then destroyed, since its a one-time use token.

* **URL:** `/auth/reset-password/:tokenId`
* **METHOD:** POST
* **TYPE:** private
* **RETURN:** email address

#### PATH:
Parameter | Required | Description
--------- | ------- | -----------
tokenId | true | The token provided in the the forgot-password call

#### BODY:
Parameter | Required | Description
--------- | ------- | -----------
password | true | User password



